model Category {
  id                   Int           @id @default(autoincrement())
  name                 String //@unique
  photo                String
  cloudinary_public_id String
  subCategory          SubCategory[]
  user                 User          @relation(fields: [createdBy], references: [id])
  createdBy            Int
  createdAt            DateTime      @default(now())
  updatedAt            DateTime      @updatedAt
  archive              Boolean       @default(false)
}

model SubCategory {
  id                   Int      @id @default(autoincrement())
  name                 String
  photo                String
  cloudinary_public_id String
  category             Category @relation(fields: [categoryId], references: [id])
  categoryId           Int
  user                 User     @relation(fields: [createdBy], references: [id])
  items                Item[]
  createdBy            Int
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  archive              Boolean  @default(false)
}

model Item {
  id                   Int          @id @default(autoincrement())
  name                 String
  photo                String
  cloudinary_public_id String
  subCategory          SubCategory  @relation(fields: [subCategoryId], references: [id])
  subCategoryId        Int
  user                 User         @relation(fields: [createdBy], references: [id])
  product              Product[]
  filters              ItemFilter[]
  createdBy            Int
  createdAt            DateTime     @default(now())
  updatedAt            DateTime     @updatedAt
  archive              Boolean      @default(false)
}

model ItemFilter {
  id        Int                @id @default(autoincrement())
  name      String
  options   ItemFilterOption[]
  user      User               @relation(fields: [createdBy], references: [id])
  item      Item               @relation(fields: [itemId], references: [id])
  itemId    Int
  createdBy Int
  createdAt DateTime           @default(now())
  updatedAt DateTime           @updatedAt
  archive   Boolean            @default(false)
}

model ItemFilterOption {
  id        Int        @id @default(autoincrement())
  name      String
  filter    ItemFilter @relation(fields: [filterId], references: [id])
  filterId  Int
  product   Product[]
  user      User       @relation(fields: [createdBy], references: [id])
  createdBy Int
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  archive   Boolean    @default(false)
}
