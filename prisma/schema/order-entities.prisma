model OrderItem {
  id        Int      @id @default(autoincrement())
  name      String
  quantity  Float
  price     Float
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  archive   Boolean  @default(false)
}

model OrderAddress {
  id           Int         @id @default(autoincrement())
  order        Order       @relation(fields: [orderId], references: [id])
  orderId      Int         @unique
  latitude     Decimal
  longtitude   Decimal
  addressType  AddressType
  addressLine1 String
  addressLine2 String
  otherAddress String?
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  archive      Boolean     @default(false)
}

model Order {
  id                 Int                      @id @default(autoincrement())
  customer           User                     @relation(fields: [customerId], references: [id])
  customerId         Int
  totalOrderAmount   Float
  cancellationUser   OrderCancellationEntity?
  cancellationTime   DateTime?
  cancellationReason String?
  paymentMode        PaymentMode
  address            OrderAddress?
  razorpayPaymentId  String?
  stripePaymentId    String?
  orderItems         OrderItem[]
  createdAt          DateTime                 @default(now())
  updatedAt          DateTime                 @updatedAt
  archive            Boolean                  @default(false)
}

model DeliveryArea {
  id         Int      @id @default(autoincrement())
  radius     Decimal
  latitude   Decimal
  longtitude Decimal
  user       User     @relation(fields: [createdBy], references: [id])
  createdBy  Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  archive    Boolean  @default(false)
}
